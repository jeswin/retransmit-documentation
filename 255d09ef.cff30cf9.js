(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{107:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return p}));var r=t(2),a=t(6),o=(t(0),t(151)),i={id:"response-aggregation",title:"Response Aggregation",sidebar_label:"Response Aggregation"},s={id:"response-aggregation",isDocsHomePage:!1,title:"Response Aggregation",description:"Let's borrow the configuration from the previous article.",source:"@site/docs/response-aggregation.md",permalink:"/docs/response-aggregation",sidebar_label:"Response Aggregation",sidebar:"someSidebar",previous:{title:"Getting Started",permalink:"/docs/getting-started"},next:{title:"Request Transform",permalink:"/docs/request-transform"}},c=[{value:"Merge Fields",id:"merge-fields",children:[]}],l={rightToc:c};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Let's borrow the configuration from the previous article."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'module.exports = {\n  http: {\n    routes: {\n      "/dashboard": {\n        GET: {\n          services: {\n            accountservice: {\n              type: "http" as "http",\n              url: "http://localhost:6666/account",\n            },\n            messagingservice: {\n              type: "http" as "http",\n              url: "http://localhost:6667/messages",\n            }\n          }}}}}};\n')),Object(o.b)("p",null,"As previously discussed, if accountservice returned ",Object(o.b)("inlineCode",{parentName:"p"},'{ "name": "batman" }')," and messaging service returned ",Object(o.b)("inlineCode",{parentName:"p"},'{ "messages": 10 }')," the final response will be ",Object(o.b)("inlineCode",{parentName:"p"},'{ "name": "batman", "messages": 10 }'),"."),Object(o.b)("p",null,"Retransmit merges responses that are received (into a final response body) in the same order in which services are defined in the configuration file. So if account service returned ",Object(o.b)("inlineCode",{parentName:"p"},'{ "name": "bruce wayne", "messages": 10 }')," instead of ",Object(o.b)("inlineCode",{parentName:"p"},'{ "messages": 10 }'),", the final response will be ",Object(o.b)("inlineCode",{parentName:"p"},'{ "name": "bruce wayne", "messages": 10 }'),"."),Object(o.b)("h3",{id:"merge-fields"},"Merge Fields"),Object(o.b)("p",null,"Fields being overwritten is a problem. Fortunately, there's an easy fix - 'mergeField'."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'module.exports = {\n  // parts omitted for brevity\n  services: {\n    accountservice: {\n      type: "http" as "http",\n      url: "http://localhost:6666/account",\n      mergeField: "account",\n    },\n    messagingservice: {\n      type: "http" as "http",\n      url: "http://localhost:6667/messages",\n      mergeField: "inbox"\n    },\n  }\n')),Object(o.b)("p",null,"This puts the response from account service into a field named 'account', and that from messaging service into a field named 'inbox'. In this case, the final response body will be"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "account": {\n    "name": "batman"\n  },\n  "inbox": {\n    "name": "bruce wayne",\n    "messages": 10\n  }\n}\n')))}p.isMDXComponent=!0},151:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return d}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),p=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(t),m=r,d=u["".concat(i,".").concat(m)]||u[m]||b[m]||o;return t?a.a.createElement(d,s(s({ref:n},l),{},{components:t})):a.a.createElement(d,s({ref:n},l))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);